//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MomondoClient.MomondoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.skygate.dk/momondo/", ConfigurationName="MomondoService.MomondoWSSoap")]
    public interface MomondoWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/StartFlightSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int StartFlightSearch(string orig, string dest, System.DateTime departDate, System.DateTime returnDate, bool oneway, bool live);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/StartFlightSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<int> StartFlightSearchAsync(string orig, string dest, System.DateTime departDate, System.DateTime returnDate, bool oneway, bool live);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/UpdateFlightResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateFlightResults();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/UpdateFlightResults", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateFlightResultsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/SetCurrency", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetCurrency(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/SetCurrency", ReplyAction="*")]
        System.Threading.Tasks.Task SetCurrencyAsync(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/SetSearchView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetSearchView(string view);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/SetSearchView", ReplyAction="*")]
        System.Threading.Tasks.Task SetSearchViewAsync(string view);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/SetFlexible", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetFlexible(bool show);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/SetFlexible", ReplyAction="*")]
        System.Threading.Tasks.Task SetFlexibleAsync(bool show);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/GetSupplierProducts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSupplierProducts(string orig, string dest, System.DateTime departDate, System.DateTime returnDate, bool oneway);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/GetSupplierProducts", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSupplierProductsAsync(string orig, string dest, System.DateTime departDate, System.DateTime returnDate, bool oneway);
        
        // CODEGEN: Parameter 'returnDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/GetSupplierProductsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MomondoClient.MomondoService.GetSupplierProductsExResponse GetSupplierProductsEx(MomondoClient.MomondoService.GetSupplierProductsExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/GetSupplierProductsEx", ReplyAction="*")]
        System.Threading.Tasks.Task<MomondoClient.MomondoService.GetSupplierProductsExResponse> GetSupplierProductsExAsync(MomondoClient.MomondoService.GetSupplierProductsExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/StartLiveSearchSupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void StartLiveSearchSupplier(string supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/StartLiveSearchSupplier", ReplyAction="*")]
        System.Threading.Tasks.Task StartLiveSearchSupplierAsync(string supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/GetPriceGraphData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPriceGraphData(string orig, string dest, bool oneway, int departYear, int departMonth, int returnYear, int returnMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/GetPriceGraphData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPriceGraphDataAsync(string orig, string dest, bool oneway, int departYear, int departMonth, int returnYear, int returnMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/WhereToGo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MomondoClient.MomondoService.WhereToGoResult[] WhereToGo(int mode, int maxCount, string origCode, string destIdent, int departYear, int departMonth, int priceFrom, int priceTo, int ambCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/WhereToGo", ReplyAction="*")]
        System.Threading.Tasks.Task<MomondoClient.MomondoService.WhereToGoResult[]> WhereToGoAsync(int mode, int maxCount, string origCode, string destIdent, int departYear, int departMonth, int priceFrom, int priceTo, int ambCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/WhereToGoGetUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MomondoClient.MomondoService.WhereToGoResult WhereToGoGetUpdated(string origCode, string destCode, int year, int month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/WhereToGoGetUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<MomondoClient.MomondoService.WhereToGoResult> WhereToGoGetUpdatedAsync(string origCode, string destCode, int year, int month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/AddPriceAgent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddPriceAgent(int range, int frequency, string name, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/AddPriceAgent", ReplyAction="*")]
        System.Threading.Tasks.Task AddPriceAgentAsync(int range, int frequency, string name, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/AddFeedback", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddFeedback(string comments, string email, byte flightsRating, byte hotelsRating, byte cityGuideRating, byte easeOfUseRating, byte designRating, byte credibilityRating, bool sendCopy, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/AddFeedback", ReplyAction="*")]
        System.Threading.Tasks.Task AddFeedbackAsync(string comments, string email, byte flightsRating, byte hotelsRating, byte cityGuideRating, byte easeOfUseRating, byte designRating, byte credibilityRating, bool sendCopy, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/NewsletterSignUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool NewsletterSignUp(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/NewsletterSignUp", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> NewsletterSignUpAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/GingerSplashCompetition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GingerSplashCompetition(string email, string answer, bool newsletter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/GingerSplashCompetition", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> GingerSplashCompetitionAsync(string email, string answer, bool newsletter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/CompetitionSignup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CompetitionSignup(int competitionID, string email, string answer, bool newsletter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/CompetitionSignup", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CompetitionSignupAsync(int competitionID, string email, string answer, bool newsletter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/PrizeDrawSignup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int PrizeDrawSignup(int competitionID, string email, bool newsletter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/PrizeDrawSignup", ReplyAction="*")]
        System.Threading.Tasks.Task<int> PrizeDrawSignupAsync(int competitionID, string email, bool newsletter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/logNoResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string logNoResults(string clientOrig, string clientDest, bool clientReturnTrip, string clientDepartDate, string clientReturnDate, string[] supplierIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.skygate.dk/momondo/logNoResults", ReplyAction="*")]
        System.Threading.Tasks.Task<string> logNoResultsAsync(string clientOrig, string clientDest, bool clientReturnTrip, string clientDepartDate, string clientReturnDate, string[] supplierIDs);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSupplierProductsEx", WrapperNamespace="http://www.skygate.dk/momondo/", IsWrapped=true)]
    public partial class GetSupplierProductsExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.skygate.dk/momondo/", Order=0)]
        public string orig;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.skygate.dk/momondo/", Order=1)]
        public string dest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.skygate.dk/momondo/", Order=2)]
        public System.DateTime departDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.skygate.dk/momondo/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> returnDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.skygate.dk/momondo/", Order=4)]
        public bool oneway;
        
        public GetSupplierProductsExRequest() {
        }
        
        public GetSupplierProductsExRequest(string orig, string dest, System.DateTime departDate, System.Nullable<System.DateTime> returnDate, bool oneway) {
            this.orig = orig;
            this.dest = dest;
            this.departDate = departDate;
            this.returnDate = returnDate;
            this.oneway = oneway;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSupplierProductsExResponse", WrapperNamespace="http://www.skygate.dk/momondo/", IsWrapped=true)]
    public partial class GetSupplierProductsExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.skygate.dk/momondo/", Order=0)]
        public string GetSupplierProductsExResult;
        
        public GetSupplierProductsExResponse() {
        }
        
        public GetSupplierProductsExResponse(string GetSupplierProductsExResult) {
            this.GetSupplierProductsExResult = GetSupplierProductsExResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.skygate.dk/momondo/")]
    public partial class WhereToGoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string origCodeField;
        
        private string destCodeField;
        
        private int monthField;
        
        private int yearField;
        
        private string destCountryField;
        
        private string destStateField;
        
        private System.DateTime departTimeField;
        
        private System.DateTime returnTimeField;
        
        private int priceEURField;
        
        private System.DateTime quoteTimeField;
        
        private string supplierIdField;
        
        private int ambCatField;
        
        private int[] hotelRatesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string OrigCode {
            get {
                return this.origCodeField;
            }
            set {
                this.origCodeField = value;
                this.RaisePropertyChanged("OrigCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DestCode {
            get {
                return this.destCodeField;
            }
            set {
                this.destCodeField = value;
                this.RaisePropertyChanged("DestCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
                this.RaisePropertyChanged("Month");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
                this.RaisePropertyChanged("Year");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DestCountry {
            get {
                return this.destCountryField;
            }
            set {
                this.destCountryField = value;
                this.RaisePropertyChanged("DestCountry");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DestState {
            get {
                return this.destStateField;
            }
            set {
                this.destStateField = value;
                this.RaisePropertyChanged("DestState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime DepartTime {
            get {
                return this.departTimeField;
            }
            set {
                this.departTimeField = value;
                this.RaisePropertyChanged("DepartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime ReturnTime {
            get {
                return this.returnTimeField;
            }
            set {
                this.returnTimeField = value;
                this.RaisePropertyChanged("ReturnTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int PriceEUR {
            get {
                return this.priceEURField;
            }
            set {
                this.priceEURField = value;
                this.RaisePropertyChanged("PriceEUR");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime QuoteTime {
            get {
                return this.quoteTimeField;
            }
            set {
                this.quoteTimeField = value;
                this.RaisePropertyChanged("QuoteTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string SupplierId {
            get {
                return this.supplierIdField;
            }
            set {
                this.supplierIdField = value;
                this.RaisePropertyChanged("SupplierId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public int AmbCat {
            get {
                return this.ambCatField;
            }
            set {
                this.ambCatField = value;
                this.RaisePropertyChanged("AmbCat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        public int[] HotelRates {
            get {
                return this.hotelRatesField;
            }
            set {
                this.hotelRatesField = value;
                this.RaisePropertyChanged("HotelRates");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MomondoWSSoapChannel : MomondoClient.MomondoService.MomondoWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MomondoWSSoapClient : System.ServiceModel.ClientBase<MomondoClient.MomondoService.MomondoWSSoap>, MomondoClient.MomondoService.MomondoWSSoap {
        
        public MomondoWSSoapClient() {
        }
        
        public MomondoWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MomondoWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MomondoWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MomondoWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int StartFlightSearch(string orig, string dest, System.DateTime departDate, System.DateTime returnDate, bool oneway, bool live) {
            return base.Channel.StartFlightSearch(orig, dest, departDate, returnDate, oneway, live);
        }
        
        public System.Threading.Tasks.Task<int> StartFlightSearchAsync(string orig, string dest, System.DateTime departDate, System.DateTime returnDate, bool oneway, bool live) {
            return base.Channel.StartFlightSearchAsync(orig, dest, departDate, returnDate, oneway, live);
        }
        
        public string UpdateFlightResults() {
            return base.Channel.UpdateFlightResults();
        }
        
        public System.Threading.Tasks.Task<string> UpdateFlightResultsAsync() {
            return base.Channel.UpdateFlightResultsAsync();
        }
        
        public void SetCurrency(string currency) {
            base.Channel.SetCurrency(currency);
        }
        
        public System.Threading.Tasks.Task SetCurrencyAsync(string currency) {
            return base.Channel.SetCurrencyAsync(currency);
        }
        
        public void SetSearchView(string view) {
            base.Channel.SetSearchView(view);
        }
        
        public System.Threading.Tasks.Task SetSearchViewAsync(string view) {
            return base.Channel.SetSearchViewAsync(view);
        }
        
        public void SetFlexible(bool show) {
            base.Channel.SetFlexible(show);
        }
        
        public System.Threading.Tasks.Task SetFlexibleAsync(bool show) {
            return base.Channel.SetFlexibleAsync(show);
        }
        
        public string GetSupplierProducts(string orig, string dest, System.DateTime departDate, System.DateTime returnDate, bool oneway) {
            return base.Channel.GetSupplierProducts(orig, dest, departDate, returnDate, oneway);
        }
        
        public System.Threading.Tasks.Task<string> GetSupplierProductsAsync(string orig, string dest, System.DateTime departDate, System.DateTime returnDate, bool oneway) {
            return base.Channel.GetSupplierProductsAsync(orig, dest, departDate, returnDate, oneway);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MomondoClient.MomondoService.GetSupplierProductsExResponse MomondoClient.MomondoService.MomondoWSSoap.GetSupplierProductsEx(MomondoClient.MomondoService.GetSupplierProductsExRequest request) {
            return base.Channel.GetSupplierProductsEx(request);
        }
        
        public string GetSupplierProductsEx(string orig, string dest, System.DateTime departDate, System.Nullable<System.DateTime> returnDate, bool oneway) {
            MomondoClient.MomondoService.GetSupplierProductsExRequest inValue = new MomondoClient.MomondoService.GetSupplierProductsExRequest();
            inValue.orig = orig;
            inValue.dest = dest;
            inValue.departDate = departDate;
            inValue.returnDate = returnDate;
            inValue.oneway = oneway;
            MomondoClient.MomondoService.GetSupplierProductsExResponse retVal = ((MomondoClient.MomondoService.MomondoWSSoap)(this)).GetSupplierProductsEx(inValue);
            return retVal.GetSupplierProductsExResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MomondoClient.MomondoService.GetSupplierProductsExResponse> MomondoClient.MomondoService.MomondoWSSoap.GetSupplierProductsExAsync(MomondoClient.MomondoService.GetSupplierProductsExRequest request) {
            return base.Channel.GetSupplierProductsExAsync(request);
        }
        
        public System.Threading.Tasks.Task<MomondoClient.MomondoService.GetSupplierProductsExResponse> GetSupplierProductsExAsync(string orig, string dest, System.DateTime departDate, System.Nullable<System.DateTime> returnDate, bool oneway) {
            MomondoClient.MomondoService.GetSupplierProductsExRequest inValue = new MomondoClient.MomondoService.GetSupplierProductsExRequest();
            inValue.orig = orig;
            inValue.dest = dest;
            inValue.departDate = departDate;
            inValue.returnDate = returnDate;
            inValue.oneway = oneway;
            return ((MomondoClient.MomondoService.MomondoWSSoap)(this)).GetSupplierProductsExAsync(inValue);
        }
        
        public void StartLiveSearchSupplier(string supplierId) {
            base.Channel.StartLiveSearchSupplier(supplierId);
        }
        
        public System.Threading.Tasks.Task StartLiveSearchSupplierAsync(string supplierId) {
            return base.Channel.StartLiveSearchSupplierAsync(supplierId);
        }
        
        public string GetPriceGraphData(string orig, string dest, bool oneway, int departYear, int departMonth, int returnYear, int returnMonth) {
            return base.Channel.GetPriceGraphData(orig, dest, oneway, departYear, departMonth, returnYear, returnMonth);
        }
        
        public System.Threading.Tasks.Task<string> GetPriceGraphDataAsync(string orig, string dest, bool oneway, int departYear, int departMonth, int returnYear, int returnMonth) {
            return base.Channel.GetPriceGraphDataAsync(orig, dest, oneway, departYear, departMonth, returnYear, returnMonth);
        }
        
        public MomondoClient.MomondoService.WhereToGoResult[] WhereToGo(int mode, int maxCount, string origCode, string destIdent, int departYear, int departMonth, int priceFrom, int priceTo, int ambCat) {
            return base.Channel.WhereToGo(mode, maxCount, origCode, destIdent, departYear, departMonth, priceFrom, priceTo, ambCat);
        }
        
        public System.Threading.Tasks.Task<MomondoClient.MomondoService.WhereToGoResult[]> WhereToGoAsync(int mode, int maxCount, string origCode, string destIdent, int departYear, int departMonth, int priceFrom, int priceTo, int ambCat) {
            return base.Channel.WhereToGoAsync(mode, maxCount, origCode, destIdent, departYear, departMonth, priceFrom, priceTo, ambCat);
        }
        
        public MomondoClient.MomondoService.WhereToGoResult WhereToGoGetUpdated(string origCode, string destCode, int year, int month) {
            return base.Channel.WhereToGoGetUpdated(origCode, destCode, year, month);
        }
        
        public System.Threading.Tasks.Task<MomondoClient.MomondoService.WhereToGoResult> WhereToGoGetUpdatedAsync(string origCode, string destCode, int year, int month) {
            return base.Channel.WhereToGoGetUpdatedAsync(origCode, destCode, year, month);
        }
        
        public void AddPriceAgent(int range, int frequency, string name, string email) {
            base.Channel.AddPriceAgent(range, frequency, name, email);
        }
        
        public System.Threading.Tasks.Task AddPriceAgentAsync(int range, int frequency, string name, string email) {
            return base.Channel.AddPriceAgentAsync(range, frequency, name, email);
        }
        
        public void AddFeedback(string comments, string email, byte flightsRating, byte hotelsRating, byte cityGuideRating, byte easeOfUseRating, byte designRating, byte credibilityRating, bool sendCopy, string url) {
            base.Channel.AddFeedback(comments, email, flightsRating, hotelsRating, cityGuideRating, easeOfUseRating, designRating, credibilityRating, sendCopy, url);
        }
        
        public System.Threading.Tasks.Task AddFeedbackAsync(string comments, string email, byte flightsRating, byte hotelsRating, byte cityGuideRating, byte easeOfUseRating, byte designRating, byte credibilityRating, bool sendCopy, string url) {
            return base.Channel.AddFeedbackAsync(comments, email, flightsRating, hotelsRating, cityGuideRating, easeOfUseRating, designRating, credibilityRating, sendCopy, url);
        }
        
        public bool NewsletterSignUp(string email) {
            return base.Channel.NewsletterSignUp(email);
        }
        
        public System.Threading.Tasks.Task<bool> NewsletterSignUpAsync(string email) {
            return base.Channel.NewsletterSignUpAsync(email);
        }
        
        public bool GingerSplashCompetition(string email, string answer, bool newsletter) {
            return base.Channel.GingerSplashCompetition(email, answer, newsletter);
        }
        
        public System.Threading.Tasks.Task<bool> GingerSplashCompetitionAsync(string email, string answer, bool newsletter) {
            return base.Channel.GingerSplashCompetitionAsync(email, answer, newsletter);
        }
        
        public bool CompetitionSignup(int competitionID, string email, string answer, bool newsletter) {
            return base.Channel.CompetitionSignup(competitionID, email, answer, newsletter);
        }
        
        public System.Threading.Tasks.Task<bool> CompetitionSignupAsync(int competitionID, string email, string answer, bool newsletter) {
            return base.Channel.CompetitionSignupAsync(competitionID, email, answer, newsletter);
        }
        
        public int PrizeDrawSignup(int competitionID, string email, bool newsletter) {
            return base.Channel.PrizeDrawSignup(competitionID, email, newsletter);
        }
        
        public System.Threading.Tasks.Task<int> PrizeDrawSignupAsync(int competitionID, string email, bool newsletter) {
            return base.Channel.PrizeDrawSignupAsync(competitionID, email, newsletter);
        }
        
        public string logNoResults(string clientOrig, string clientDest, bool clientReturnTrip, string clientDepartDate, string clientReturnDate, string[] supplierIDs) {
            return base.Channel.logNoResults(clientOrig, clientDest, clientReturnTrip, clientDepartDate, clientReturnDate, supplierIDs);
        }
        
        public System.Threading.Tasks.Task<string> logNoResultsAsync(string clientOrig, string clientDest, bool clientReturnTrip, string clientDepartDate, string clientReturnDate, string[] supplierIDs) {
            return base.Channel.logNoResultsAsync(clientOrig, clientDest, clientReturnTrip, clientDepartDate, clientReturnDate, supplierIDs);
        }
    }
}
